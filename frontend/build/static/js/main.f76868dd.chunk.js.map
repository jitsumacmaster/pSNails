{"version":3,"sources":["util/route_util.js","util/session_api_util.js","actions/session_actions.js","components/nav/navbar.js","components/nav/navbar_container.js","actions/listing_actions.js","util/listing_api_util.js","components/listings/listing_box.js","components/listings/listings.js","components/listings/listings_container.js","components/detailbox/detail_list.js","components/detailbox/detail_dropdown.js","components/listings/listing.js","components/listings/listing_container.js","components/main/main_page.js","components/session/login_form.js","components/session/login_form_container.js","components/session/signup_form.js","components/session/signup_form_container.js","components/profile/profile.js","components/profile/profile_container.js","components/listings/listing_compose.js","components/listings/listing_compose_container.js","components/app.js","components/root.js","reducers/session_reducer.js","reducers/session_errors_reducer.js","reducers/errors_reducer.js","reducers/listings_reducer.js","reducers/listing_reducer.js","reducers/root_reducer.js","store/store.js","index.js"],"names":["mapStateToProps","state","loggedIn","session","isAuthenticated","AuthRoute","withRouter","connect","Component","component","path","exact","render","props","to","ProtectedRoute","rest","setAuthToken","token","axios","defaults","headers","common","receiveErrors","errors","type","signup","user","dispatch","userData","post","then","err","response","data","login","res","localStorage","setItem","APIUtil","decoded","jwt_decode","currentUser","catch","logout","removeItem","NavBar","logoutUser","bind","getLinks","e","preventDefault","this","onClick","React","fetchListing","id","get","getListing","listing","receiveListing","console","log","fetchListings","listings","receiveListings","fetchUserListings","getUserListings","receiveUserListings","composeListing","writeListing","receiveNewListing","ListingBox","_id","key","params","title","price","Listing","newState","setState","length","map","Object","values","all","Listings","DetailList","details","undefined","name","el","i","arr","DetailDropdown","field","currentTarget","value","options","optionComponentArray","option","push","defaultValue","catagories","match","prevProps","forEach","detail","keys","filter","makeArraysForComponents","text","colors","styles","onSubmit","handleSubmit","size","shapes","finishes","listingstatus","MainPage","LoginForm","email","password","renderErrors","nextProps","history","error","onChange","update","placeholder","SignupForm","handle","password2","clearedErrors","signedIn","className","isSignedIn","Profile","ListingCompose","newListing","assign","target","checked","min","updateObj","new","App","LoginFormContainer","SignupFormContainer","ListingContainer","ListingsContainer","ProfileContainer","ListingComposeContainer","Root","store","initialState","_nullErrors","SessionErrorsReducer","action","freeze","combineReducers","ListingsReducer","ListingReducer","RootReducer","configureStore","preloadedState","createStore","rootReducer","applyMiddleware","thunk","logger","document","addEventListener","jwtToken","decodedUser","currentTime","Date","now","exp","window","location","href","root","getElementById","ReactDOM"],"mappings":"uOAkCMA,EAAkB,SAAAC,GAAK,MAC3B,CAACC,SAAUD,EAAME,QAAQC,kBAGdC,EAAYC,YAAWC,YAAQP,EAARO,EAlCvB,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAsBC,EAAzB,EAAyBA,KAAMR,EAA/B,EAA+BA,SAAUS,EAAzC,EAAyCA,MAAzC,OACX,kBAAC,IAAD,CAAOD,KAAMA,EAAMC,MAAOA,EAAOC,OAAQ,SAACC,GAAD,OACtCX,EAGC,kBAAC,IAAD,CAAUY,GAAG,MAFb,kBAACN,EAAcK,UAgCRE,EAAiBT,YAAWC,YAAQP,EAARO,EAlBvB,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAsBP,EAAzB,EAAyBA,SAAac,EAAtC,+CAChB,kBAAC,IAAD,iBACMA,EADN,CAEEJ,OAAQ,SAAAC,GAAK,OACXX,EACE,kBAACM,EAAcK,GAEf,kBAAC,IAAD,CAAUC,GAAG,mB,iBC1BRG,EAAe,SAAAC,GACtBA,EACFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAE1CC,IAAMC,SAASC,QAAQC,OAAvB,e,iBCWEC,EAAgB,SAAAC,GAAM,MAAK,CACpCC,KAdkC,yBAelCD,WAOSE,EAAS,SAAAC,GAAI,OAAI,SAAAC,GAAQ,ODhBfC,ECiBJF,EDhBVR,IAAMW,KAAK,sBAAuBD,ICgBlBE,MAAK,kBACtBH,EAfgC,CACpCH,KARgC,4BAuB7B,SAAAO,GAAG,OACFJ,EAASL,EAAcS,EAAIC,SAASC,UDpBtB,IAACL,ICwBVM,EAAQ,SAAAR,GAAI,OAAI,SAAAC,GAAQ,ODpBfC,ECqBJF,EDpBTR,IAAMW,KAAK,mBAAoBD,ICoBhBE,MAAK,SAAAK,GAAQ,IACrBlB,EAAUkB,EAAIF,KAAdhB,MACRmB,aAAaC,QAAQ,WAAYpB,GACjCqB,EAAqBrB,GACrB,IAAMsB,EAAUC,IAAWvB,GAC3BU,EAhC0C,CAC9CH,KANgC,uBAOhCiB,YA8BgCF,OAE/BG,OAAM,SAAAX,GACHJ,EAASL,EAAcS,EAAIC,SAASC,UD7BvB,IAACL,ICiCTe,EAAS,kBAAM,SAAAhB,GACxBS,aAAaQ,WAAW,YACxBN,GAAqB,GACrBX,EA5B6B,CAC7BH,KAlB+B,0B,oCC0CpBqB,G,wDA1Cb,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IACDkC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAHC,E,uDAMRE,GACPA,EAAEC,iBACFC,KAAKvC,MAAM+B,W,iCAIX,OAAIQ,KAAKvC,MAAMX,SAET,6BACI,kBAAC,IAAD,CAAMY,GAAI,aAAV,QACA,kBAAC,IAAD,CAAMA,GAAI,YAAV,WACA,kBAAC,IAAD,CAAMA,GAAI,gBAAV,kBACA,4BAAQuC,QAASD,KAAKL,YAAtB,WAKJ,6BACI,kBAAC,IAAD,CAAMjC,GAAI,aAAV,QACA,kBAAC,IAAD,CAAMA,GAAI,WAAV,UACA,kBAAC,IAAD,CAAMA,GAAI,UAAV,Y,+BAOV,OACE,6BACI,2CACEsC,KAAKH,gB,GArCEK,IAAM9C,YCKZD,eAJS,SAAAN,GAAK,MAAK,CAChCC,SAAUD,EAAME,QAAQC,mBAKxB,CAAEwC,UAFWrC,CAGbuC,GCeWS,EAAe,SAAAC,GAAE,OAAI,SAAA5B,GAAQ,OCzBhB,SAAA4B,GACxB,OAAOrC,IAAMsC,IAAN,wBAA2BD,IDyBlCE,CAAWF,GACRzB,MAAK,SAAA4B,GAAO,OAAI/B,EAtBS,SAAA+B,GAAO,MAAK,CACxClC,KAN6B,kBAO7BkC,WAoB4BC,CAAeD,OACxChB,OAAM,SAAAX,GAAG,OAAI6B,QAAQC,IAAI9B,QAGjB+B,EAAgB,kBAAM,SAAAnC,GAAQ,OC1BlCT,IAAMsC,IAAN,iBD4BJ1B,MAAK,SAAAiC,GAAQ,OAAIpC,EAvBS,SAAAoC,GAAQ,MAAK,CAC1CvC,KAV8B,mBAW9BuC,YAqB6BC,CAAgBD,OAC1CrB,OAAM,SAAAX,GAAG,OAAI6B,QAAQC,IAAI9B,QAGjBkC,EAAoB,SAAAV,GAAE,OAAI,SAAA5B,GAAQ,OC7BhB,SAAA4B,GAC7B,OAAOrC,IAAMsC,IAAN,6BAAgCD,ID6BvCW,CAAgBX,GACbzB,MAAK,SAAAiC,GAAQ,OAAIpC,EAxBa,SAAAoC,GAAQ,MAAK,CAC9CvC,KAdmC,wBAenCuC,YAsB6BI,CAAoBJ,OAC9CrB,OAAM,SAAAX,GAAG,OAAI6B,QAAQC,IAAI9B,QAGjBqC,EAAiB,SAAAnC,GAAI,OAAI,SAAAN,GAAQ,OC/BlB,SAAAM,GAC1B,OAAOf,IAAMW,KAAK,iBAAkBI,GD+BpCoC,CAAapC,GACVH,MAAK,SAAA4B,GAAO,OAAI/B,EAzBY,SAAA+B,GAAO,MAAK,CAC3ClC,KAlBiC,sBAmBjCkC,WAuB4BY,CAAkBZ,OAC3ChB,OAAM,SAAAX,GAAG,OAAI6B,QAAQC,IAAI9B,QE/BfwC,E,uKAZX,OACI,6BACE,4BACE,kBAAC,IAAD,CAAM1D,GAAE,oBAAesC,KAAKvC,MAAM8C,QAAQc,KAAOC,IAAKtB,KAAKvC,MAAM8C,QAAQc,IAAKE,OAAQ,CAAEhB,QAASP,KAAKvC,MAAM8C,UAAYP,KAAKvC,MAAM8C,QAAQiB,QAE3I,+BAAKxB,KAAKvC,MAAM8C,QAAQkB,Y,GAPXvB,IAAM9C,WCCzBsE,E,kDACJ,WAAYjE,GAAQ,IAAD,8BACjB,cAAMA,IAEDZ,MAAQ,CACX+D,SAAU,IAJK,E,gEASjBZ,KAAKvC,MAAMkD,kB,gDAGagB,GACxB3B,KAAK4B,SAAS,CAAEhB,SAAUe,EAASf,a,+BAKnC,OAAmC,IAA/BZ,KAAKnD,MAAM+D,SAASiB,OACd,mDAGN,6BACE,oCAEC7B,KAAKnD,MAAM+D,SAASkB,KAAI,SAAAvB,GAAO,OAE9B,kBAAC,EAAD,CAAYe,IAAKf,EAAQc,IAAKd,QAASA,Y,GA5B7BL,IAAM9C,WAqCbF,cAAWwE,GCzBXvE,eAZS,SAACN,GACvB,MAAO,CACL+D,SAAUmB,OAAOC,OAAOnF,EAAM+D,SAASqB,SAIhB,SAAAzD,GACzB,MAAO,CACLmC,cAAe,kBAAMnC,EAASmC,SAInBxD,CAA6C+E,GCM7CC,E,uKAjBX,IAAIC,EAAUpC,KAAKvC,MAAM2E,QACzB,YAAgBC,IAAZD,EACM,oDAGN,6BACE,8BAAOpC,KAAKvC,MAAM6E,KAAlB,MACA,2BACGF,EAAQN,KAAI,SAACS,EAAIC,EAAGC,GAAR,OAAiBD,IAAMC,EAAIZ,OAAS,EAAKU,GAAM,KAAOA,W,GAVtDrC,IAAM9C,W,QCiChBsF,E,qKAhCNC,GAAQ,IAAD,OACZ,OAAO,SAAA7C,GAAC,OAAI,EAAK8B,SAAL,eACTe,EAAQ7C,EAAE8C,cAAcC,W,+BAI3B,IAAIC,EAAU9C,KAAKvC,MAAMqF,QACrBC,EAAuB,GAC3B,QAAgBV,IAAZS,EACF,OAAQ,oDAER,IAAK,IAAIN,EAAI,EAAGA,EAAIM,EAAQjB,OAAQW,IAAK,CACrC,IAAIQ,EAASF,EAAQN,GACrBO,EAAqBE,KAAK,4BAAQ3B,IAAKkB,EAAGK,MAAOG,GAAUA,IAE/D,OACE,oCACI,+BACI,8BAAQhD,KAAKvC,MAAM6E,KAAnB,MACA,4BAAQA,KAAMtC,KAAKvC,MAAM6E,KACvBY,aAAa,UAGZH,S,GAxBU7C,IAAM9C,WCE7BsE,E,kDACJ,WAAYjE,GAAQ,IAAD,8BACjB,cAAMA,IAEDZ,MAAQ,CACX0D,QAAS,GACT4C,WAAY,IALG,E,gEAUjB,IAAI/C,EAAKJ,KAAKvC,MAAM2F,MAAM7B,OAAOnB,GACjCJ,KAAKvC,MAAM0C,aAAaC,K,yCAKPiD,GACbrD,KAAKvC,MAAM8C,QAAQc,MAAQgC,EAAU9C,QAAQc,KAE/CrB,KAAK4B,SAAS,CAAErB,QAASP,KAAKvC,MAAM8C,Y,gDAIb,IAAD,OACC,CAAC,SAAU,WAAY,SAAU,SAAU,OAAQ,UAC3D+C,SAAQ,SAAAC,GACnB,EAAK1G,MAAM0D,QAAQgD,KAErB,EAAK1G,MAAMsG,WAAWI,GAAWxB,OAAOyB,KAAK,EAAK3G,MAAM0D,QAAQgD,IAASE,QAAO,SAAAlB,GAAE,OAAI,EAAK1F,MAAM0D,QAAQgD,GAAQhB,Y,+BAYrH,OAAwC,IAApCR,OAAOyB,KAAKxD,KAAKnD,MAAM0D,SACjB,qFAERP,KAAK0D,0BAIH,6BACI,4BACG1D,KAAKnD,MAAM0D,QAAQiB,OAEtB,gCAAMxB,KAAKnD,MAAM0D,QAAQkB,OACzB,2BAAIzB,KAAKnD,MAAM0D,QAAQoD,MACrB,kBAAC,EAAD,CAAYrC,IAAI,SAASgB,KAAK,SAASF,QAASpC,KAAKnD,MAAMsG,WAAWS,SAEtE,kBAAC,EAAD,CAAYtC,IAAI,SAASgB,KAAK,SAASF,QAASpC,KAAKnD,MAAMsG,WAAWU,SAExE,0BAAMC,SAAU9D,KAAK+D,cACnB,kBAAC,EAAD,CAAgBzC,IAAI,OAAOgB,KAAK,OAAOQ,QAAS9C,KAAKnD,MAAMsG,WAAWa,OACtE,6BACA,kBAAC,EAAD,CAAgB1C,IAAI,SAASgB,KAAK,SAASQ,QAAS9C,KAAKnD,MAAMsG,WAAWtB,SAC1E,6BACA,kBAAC,EAAD,CAAgBP,IAAI,SAASgB,KAAK,SAASQ,QAAS9C,KAAKnD,MAAMsG,WAAWc,SAC1E,6BACA,kBAAC,EAAD,CAAgB3C,IAAI,WAAWgB,KAAK,WAAWQ,QAAS9C,KAAKnD,MAAMsG,WAAWe,YAIhF,8CAAoBlE,KAAKnD,MAAM0D,QAAQ4D,qB,GArE7BjE,IAAM9C,WA6EbF,cAAWwE,GChEXvE,eAdS,SAACN,GAEvB,MAAO,CACLE,QAASF,EAAME,QACfwD,QAAS1D,EAAM0D,YAIQ,SAAA/B,GACzB,MAAO,CACL2B,aAAc,SAAAC,GAAE,OAAI5B,EAAS2B,EAAaC,QAI/BjD,CAA6CuE,GCF7C0C,E,uKAXX,OACE,6BACE,0CACA,wE,GANelE,IAAM9C,WCCvBiH,E,kDACJ,WAAY5G,GAAQ,IAAD,8BACjB,cAAMA,IAEDZ,MAAQ,CACXyH,MAAO,GACPC,SAAU,GACVnG,OAAQ,IAGV,EAAK2F,aAAe,EAAKA,aAAanE,KAAlB,gBACpB,EAAK4E,aAAe,EAAKA,aAAa5E,KAAlB,gBAVH,E,sEAaO6E,IACM,IAA1BA,EAAUnF,aACZU,KAAKvC,MAAMiH,QAAQzB,KAAK,aAG1BjD,KAAK4B,SAAS,CAACxD,OAAQqG,EAAUrG,W,6BAG5BuE,GAAQ,IAAD,OACZ,OAAO,SAAA7C,GAAC,OAAI,EAAK8B,SAAL,eACTe,EAAQ7C,EAAE8C,cAAcC,W,mCAIhB/C,GACXA,EAAEC,iBAEF,IAAIxB,EAAO,CACT+F,MAAOtE,KAAKnD,MAAMyH,MAClBC,SAAUvE,KAAKnD,MAAM0H,UAGvBvE,KAAKvC,MAAMsB,MAAMR,K,qCAGH,IAAD,OACb,OACE,4BACGwD,OAAOyB,KAAKxD,KAAKnD,MAAMuB,QAAQ0D,KAAI,SAAC6C,EAAOnC,GAAR,OAClC,wBAAIlB,IAAG,gBAAWkB,IACf,EAAK3F,MAAMuB,OAAOuG,U,+BAQ3B,OACE,6BACE,0BAAMb,SAAU9D,KAAK+D,cACnB,6BACE,6BACE,2BAAO1F,KAAK,OACVwE,MAAO7C,KAAKnD,MAAMyH,MAClBM,SAAU5E,KAAK6E,OAAO,SACtBC,YAAY,UAEhB,6BACE,2BAAOzG,KAAK,WACVwE,MAAO7C,KAAKnD,MAAM0H,SAClBK,SAAU5E,KAAK6E,OAAO,YACtBC,YAAY,aAEhB,6BACA,2BAAOzG,KAAK,SAASwE,MAAM,WAC1B7C,KAAKwE,sB,GAtEMtE,IAAM9C,WA8EfF,cAAWmH,GCjEXlH,eAZS,SAACN,GACvB,MAAO,CACLuB,OAAQvB,EAAMuB,OAAOrB,YAIE,SAACyB,GAC1B,MAAO,CACLO,MAAO,SAAAR,GAAI,OAAIC,EAASO,EAAMR,QAInBpB,CAGbkH,GChBIU,E,kDACJ,WAAYtH,GAAQ,IAAD,8BACjB,cAAMA,IACDZ,MAAQ,CACXyH,MAAO,GACPU,OAAQ,GACRT,SAAU,GACVU,UAAW,GACX7G,OAAQ,IAGV,EAAK2F,aAAe,EAAKA,aAAanE,KAAlB,gBACpB,EAAKsF,eAAgB,EAXJ,E,sEAcOT,IACG,IAAvBA,EAAUU,UACZnF,KAAKvC,MAAMiH,QAAQzB,KAAK,UAG1BjD,KAAK4B,SAAS,CAACxD,OAAQqG,EAAUrG,W,6BAG5BuE,GAAQ,IAAD,OACZ,OAAO,SAAA7C,GAAC,OAAI,EAAK8B,SAAL,eACTe,EAAQ7C,EAAE8C,cAAcC,W,mCAIhB/C,GACXA,EAAEC,iBACF,IAAIxB,EAAO,CACT+F,MAAOtE,KAAKnD,MAAMyH,MAClBU,OAAQhF,KAAKnD,MAAMmI,OACnBT,SAAUvE,KAAKnD,MAAM0H,SACrBU,UAAWjF,KAAKnD,MAAMoI,WAGxBjF,KAAKvC,MAAMa,OAAOC,EAAMyB,KAAKvC,MAAMiH,W,qCAGrB,IAAD,OACb,OACE,4BACG3C,OAAOyB,KAAKxD,KAAKnD,MAAMuB,QAAQ0D,KAAI,SAAC6C,EAAOnC,GAAR,OAClC,wBAAIlB,IAAG,gBAAWkB,IACf,EAAK3F,MAAMuB,OAAOuG,U,+BAQ3B,OACE,yBAAKS,UAAU,wBACb,0BAAMtB,SAAU9D,KAAK+D,cACnB,yBAAKqB,UAAU,cACb,6BACE,2BAAO/G,KAAK,OACVwE,MAAO7C,KAAKnD,MAAMyH,MAClBM,SAAU5E,KAAK6E,OAAO,SACtBC,YAAY,UAEhB,6BACE,2BAAOzG,KAAK,OACVwE,MAAO7C,KAAKnD,MAAMmI,OAClBJ,SAAU5E,KAAK6E,OAAO,UACtBC,YAAY,WAEhB,6BACE,2BAAOzG,KAAK,WACVwE,MAAO7C,KAAKnD,MAAM0H,SAClBK,SAAU5E,KAAK6E,OAAO,YACtBC,YAAY,aAEhB,6BACE,2BAAOzG,KAAK,WACVwE,MAAO7C,KAAKnD,MAAMoI,UAClBL,SAAU5E,KAAK6E,OAAO,aACtBC,YAAY,qBAEhB,6BACA,2BAAOzG,KAAK,SAASwE,MAAM,WAC1B7C,KAAKwE,sB,GApFOtE,IAAM9C,WA4FhBF,cAAW6H,GC9EX5H,eAbS,SAACN,GACvB,MAAO,CACLsI,SAAUtI,EAAME,QAAQsI,WACxBjH,OAAQvB,EAAMuB,OAAOrB,YAIE,SAACyB,GAC1B,MAAO,CACLF,OAAQ,SAAAC,GAAI,OAAIC,EAASF,EAAOC,QAIrBpB,CAGb4H,GCiBaO,E,kDAjCX,WAAY7H,GAAQ,IAAD,8BACf,cAAMA,IAEDZ,MAAQ,CACT+D,SAAU,IAJC,E,gEASfH,QAAQC,IAAIV,KAAKvC,MAAM6B,YAAYc,IACnCJ,KAAKvC,MAAMqD,kBAAkBd,KAAKvC,MAAM6B,YAAYc,M,gDAG9BuB,GACtB3B,KAAK4B,SAAS,CAAEhB,SAAUe,EAASf,a,+BAInC,OAAmC,IAA/BZ,KAAKnD,MAAM+D,SAASiB,OACd,0DAGN,6BACE,6DACC7B,KAAKnD,MAAM+D,SAASkB,KAAI,SAAAvB,GAAO,OAC9B,kBAAC,EAAD,CAAYe,IAAKf,EAAQc,IAAKd,QAASA,Y,GA1BjCL,IAAM9C,WCcbD,eAbS,SAACN,GACvB,MAAO,CACL+D,SAAUmB,OAAOC,OAAOnF,EAAM+D,SAASrC,MACvCe,YAAazC,EAAME,QAAQwB,SAIJ,SAAAC,GACzB,MAAO,CACLsC,kBAAmB,SAAAV,GAAE,OAAI5B,EAASsC,EAAkBV,QAIzCjD,CAA6CmI,GC4O7CC,E,kDAzPb,WAAY9H,GAAQ,IAAD,8BACf,cAAMA,IAEDZ,MAAQ,CACT2E,MAAO,GACPmC,KAAM,GACNQ,cAAe,GACf1C,MAAO,EACPuC,KAAM,GACNE,SAAU,GACVrC,OAAQ,GACRoC,OAAQ,GACRL,OAAQ,GACRC,OAAQ,GACR2B,WAAY,IAGhB,EAAKzB,aAAe,EAAKA,aAAanE,KAAlB,gBAjBL,E,sEAoBO6E,GACtBzE,KAAK4B,SAAS,CAAC4D,WAAYf,EAAUe,e,mCAG5B1F,GACXA,EAAEC,iBACF,IAAIQ,EAAU,CACZ4D,cAAenE,KAAKnD,MAAMsH,cAC1B3C,MAAOxB,KAAKnD,MAAM2E,MAElBmC,KAAM3D,KAAKnD,MAAM8G,KACjBlC,MAAOzB,KAAKnD,MAAM4E,MAClBuC,KAAMhE,KAAKnD,MAAMmH,KACjBE,SAAUlE,KAAKnD,MAAMqH,SACrBrC,OAAQ7B,KAAKnD,MAAMgF,OACnBoC,OAAQjE,KAAKnD,MAAMoH,OACnBL,OAAQ5D,KAAKnD,MAAM+G,OACnBC,OAAQ7D,KAAKnD,MAAMgH,QAGrB7D,KAAKvC,MAAMwD,eAAeV,GAC1BP,KAAK4B,SAAS,CACZuC,cAAe,GACf3C,MAAO,GACPmC,KAAM,GACNK,KAAM,GACNE,SAAU,GACVrC,OAAQ,GACRoC,OAAQ,GACRL,OAAQ,GACRC,OAAQ,O,6BAILlB,GAAQ,IAAD,OACZ,OAAO,SAAA7C,GAAC,OAAI,EAAK8B,SAAL,eACTe,EAAQ7C,EAAE8C,cAAcC,W,gCAInBF,GAAQ,IAAD,OACf,OAAO,SAAA7C,GAAC,OAAI,EAAK8B,SAAL,eAAiBe,EAAQZ,OAAO0D,OAAQ,EAAK5I,MAAM8F,IAAU,GAApCZ,OAAA,IAAAA,CAAA,GAClCjC,EAAE4F,OAAOpD,KAAOxC,EAAE4F,OAAOC,e,+BAc5B,OACI,6BACI,0BAAM7B,SAAU9D,KAAK+D,cACjB,+CAEE,2BAAO1F,KAAK,WACVwE,MAAO7C,KAAKnD,MAAMsH,cAClBS,SAAU5E,KAAK6E,OAAO,iBACtBC,YAAY,oBAEd,6BAPF,QASE,2BAAOzG,KAAK,WACVwE,MAAO7C,KAAKnD,MAAM2E,MAClBoD,SAAU5E,KAAK6E,OAAO,SACtBC,YAAY,2BAEd,6BAdF,cAiBE,2BAAOzG,KAAK,WACVwE,MAAO7C,KAAKnD,MAAM8G,KAClBiB,SAAU5E,KAAK6E,OAAO,QACtBC,YAAY,oBAEd,6BAtBF,UAyBE,2BAAOzG,KAAK,SACVwE,MAAO7C,KAAKnD,MAAM4E,MAClBmE,IAAI,IACJhB,SAAU5E,KAAK6E,OAAO,SACtBC,YAAY,4BA7BhB,wBAgCE,6BAhCF,cAoCE,2BAAOzG,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,UApC/D,SAsCE,2BAAOxH,KAAK,WAAWiE,KAAK,SAASsC,SAAU5E,KAAK6F,UAAU,UAtChE,QAwCE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,UAxC/D,UA0CE,2BAAOxH,KAAK,WAAWiE,KAAK,KAAKsC,SAAU5E,KAAK6F,UAAU,UA1C5D,WA4CE,2BAAOxH,KAAK,WAAWiE,KAAK,MAAMsC,SAAU5E,KAAK6F,UAAU,UAC3D,6BA7CF,4BA+CE,2BAAOxH,KAAK,WAAWiE,KAAK,UAAUsC,SAAU5E,KAAK6F,UAAU,UA/CjE,+BAiDE,2BAAOxH,KAAK,WAAWiE,KAAK,aAAasC,SAAU5E,KAAK6F,UAAU,UAElE,6BAnDF,kBAsDE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,cAtD/D,QAwDE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,cAE7D,6BA1DF,gBA6DE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,YA7D/D,SA+DE,2BAAOxH,KAAK,WAAWiE,KAAK,SAASsC,SAAU5E,KAAK6F,UAAU,YA/DhE,OAiEE,2BAAOxH,KAAK,WAAWiE,KAAK,OAAOsC,SAAU5E,KAAK6F,UAAU,YAjE9D,aAmEE,2BAAOxH,KAAK,WAAWiE,KAAK,YAAYsC,SAAU5E,KAAK6F,UAAU,YAEjE,6BArEF,iBAwEE,2BAAOxH,KAAK,WAAWiE,KAAK,SAASsC,SAAU5E,KAAK6F,UAAU,YAxEhE,WA0EE,2BAAOxH,KAAK,WAAWiE,KAAK,WAAWsC,SAAU5E,KAAK6F,UAAU,YA1ElE,SA4EE,2BAAOxH,KAAK,WAAWiE,KAAK,SAASsC,SAAU5E,KAAK6F,UAAU,YA5EhE,SA8EE,2BAAOxH,KAAK,WAAWiE,KAAK,SAASsC,SAAU5E,KAAK6F,UAAU,YA9EhE,OAgFE,2BAAOxH,KAAK,WAAWiE,KAAK,OAAOsC,SAAU5E,KAAK6F,UAAU,YAhF9D,QAkFE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,YAlF/D,YAoFE,2BAAOxH,KAAK,WAAWiE,KAAK,YAAYsC,SAAU5E,KAAK6F,UAAU,YAEjE,6BAtFF,eAyFE,2BAAOxH,KAAK,WAAWiE,KAAK,OAAOsC,SAAU5E,KAAK6F,UAAU,YAzF9D,QA2FE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,YA3F/D,SA6FE,2BAAOxH,KAAK,WAAWiE,KAAK,SAASsC,SAAU5E,KAAK6F,UAAU,YA7FhE,MA+FE,2BAAOxH,KAAK,WAAWiE,KAAK,MAAMsC,SAAU5E,KAAK6F,UAAU,YA/F7D,QAiGE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,YAjG/D,OAmGE,2BAAOxH,KAAK,WAAWiE,KAAK,OAAOsC,SAAU5E,KAAK6F,UAAU,YAnG9D,QAqGE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,YArG/D,SAuGE,2BAAOxH,KAAK,WAAWiE,KAAK,SAASsC,SAAU5E,KAAK6F,UAAU,YAvGhE,QAyGE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,YAzG/D,SA2GE,2BAAOxH,KAAK,WAAWiE,KAAK,SAASsC,SAAU5E,KAAK6F,UAAU,YA3GhE,QA6GE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,YA7G/D,OA+GE,2BAAOxH,KAAK,WAAWiE,KAAK,OAAOsC,SAAU5E,KAAK6F,UAAU,YA/G9D,SAiHE,2BAAOxH,KAAK,WAAWiE,KAAK,SAASsC,SAAU5E,KAAK6F,UAAU,YAjHhE,QAmHE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,YAE7D,6BArHF,gBAwHE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,YAxH/D,QA0HE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,YA1H/D,8BA4HE,2BAAOxH,KAAK,WAAWiE,KAAK,WAAWsC,SAAU5E,KAAK6F,UAAU,YA5HlE,UA8HE,2BAAOxH,KAAK,WAAWiE,KAAK,UAAUsC,SAAU5E,KAAK6F,UAAU,YA9HjE,OAgIE,2BAAOxH,KAAK,WAAWiE,KAAK,OAAOsC,SAAU5E,KAAK6F,UAAU,YAhI9D,mCAkIE,2BAAOxH,KAAK,WAAWiE,KAAK,YAAYsC,SAAU5E,KAAK6F,UAAU,YAlInE,kCAoIE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,YApI/D,qCAsIE,2BAAOxH,KAAK,WAAWiE,KAAK,YAAYsC,SAAU5E,KAAK6F,UAAU,YAtInE,QAwIE,2BAAOxH,KAAK,WAAWiE,KAAK,QAAQsC,SAAU5E,KAAK6F,UAAU,YAuB7D,6BACA,2BAAOxH,KAAK,SAASwE,MAAM,aAGjC,6BACA,kBAAC,EAAD,CAAYtC,QAASP,KAAKnD,MAAM2I,kB,GApPftF,IAAM9C,WCcpBD,gBAbS,SAACN,GACvB,MAAO,CACLyC,YAAazC,EAAME,QAAQwB,KAC3BiH,WAAY3I,EAAM+D,SAASkF,QAIJ,SAAAtH,GACzB,MAAO,CACLyC,eAAgB,SAAAnC,GAAI,OAAIN,EAASyC,EAAenC,QAIrC3B,CAA6CoI,GCoB7CQ,GAjBH,kBACV,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC9I,EAAD,CAAWM,OAAK,EAACD,KAAK,IAAID,UAAW+G,IACrC,kBAACnH,EAAD,CAAWM,OAAK,EAACD,KAAK,SAASD,UAAW2I,IAC1C,kBAAC/I,EAAD,CAAWM,OAAK,EAACD,KAAK,UAAUD,UAAW4I,IAE3C,kBAAC,IAAD,CAAO1I,OAAK,EAACD,KAAK,gBAAgBD,UAAW6I,IAE7C,kBAAC,IAAD,CAAO3I,OAAK,EAACD,KAAK,YAAYD,UAAW8I,IACzC,kBAACxI,EAAD,CAAgBJ,OAAK,EAACD,KAAK,WAAWD,UAAW+I,IACjD,kBAACzI,EAAD,CAAgBJ,OAAK,EAACD,KAAK,eAAeD,UAAWgJ,QCnB5CC,GARF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACX,kBAAC,IAAD,CAAUA,MAAQA,GAChB,kBAAC,IAAD,KACE,kBAAC,GAAD,S,+CCJAC,GAAe,CACnBxJ,iBAAiB,EACjBuB,KAAM,ICDFkI,GAAc,GAcLC,GAZc,WAAkC,IAAjC7J,EAAgC,uDAAxB4J,GAAaE,EAAW,uCAE5D,OADA5E,OAAO6E,OAAO/J,GACP8J,EAAOtI,MACZ,IxBNkC,yBwBOhC,OAAOsI,EAAOvI,OAChB,IxBTgC,uBwBU9B,OAAOqI,GACT,QACE,OAAO5J,ICXEgK,gBAAgB,CAC7B9J,QAAS2J,KCeMI,GAlBS,WAA4D,IAA3DjK,EAA0D,uDAAlD,CAAEoF,IAAK,GAAI1D,KAAM,GAAIuH,SAAKzD,GAAasE,EAAW,uCACjF5E,OAAO6E,OAAO/J,GACd,IAAI8E,EAAWI,OAAO0D,OAAO,GAAI5I,GACjC,OAAO8J,EAAOtI,MACZ,IvBH0B,mBuBKxB,OADAsD,EAASM,IAAM0E,EAAO/F,SAAS9B,KACxB6C,EACT,IvBL+B,wBuBO7B,OADAA,EAASpD,KAAOoI,EAAO/F,SAAS9B,KACzB6C,EACT,IvBP6B,sBuBS3B,OADAA,EAASmE,IAAMa,EAAOpG,QAAQzB,KACvB6C,EACT,QACE,OAAO9E,ICDEkK,GAbQ,WAAyB,IAAxBlK,EAAuB,uDAAf,GAAI8J,EAAW,uCAC7C5E,OAAO6E,OAAO/J,GACCkF,OAAO0D,OAAO,GAAI5I,GACjC,OAAO8J,EAAOtI,MACZ,IxBJyB,kBwBOvB,OAFWsI,EAAOpG,QAAQzB,KAG5B,QACE,OAAOjC,ICEAmK,GAPKH,aAAgB,CAClCzI,UACArB,QLCa,WAAwC,IAA/BF,EAA8B,uDAAtB2J,GAAcG,EAAQ,uCACpD,OAAQA,EAAOtI,MACb,IvBRgC,uBuBS9B,OAAO,6BACFxB,GADL,IAEEG,kBAAmB2J,EAAOrH,YAC1Bf,KAAMoI,EAAOrH,cAEjB,IvBZ+B,sBuBa7B,MAAO,CACLtC,iBAAiB,EACjBuB,UAAM8D,GAEV,IvBhBgC,uBuBiB9B,OAAO,6BACFxF,GADL,IAEEwI,YAAY,IAEhB,QACE,OAAOxI,IKnBX0D,WACAK,cCIaqG,GARQ,eAACC,EAAD,uDAAkB,GAAlB,OACrBC,aACEC,GACAF,EACAG,aAAgBC,KAAOC,QCD3BC,SAASC,iBAAiB,oBAAoB,WAC5C,IAAIlB,EAEJ,GAAItH,aAAayI,SAAU,CACzB7J,EAAaoB,aAAayI,UAE1B,IAAMC,EAActI,IAAWJ,aAAayI,UAG5CnB,EAAQU,GAFe,CAAElK,QAAS,CAAEC,iBAAiB,EAAMuB,KAAMoJ,KAIjE,IAAMC,EAAcC,KAAKC,MAAQ,IAE7BH,EAAYI,IAAMH,IACpBrB,EAAM/H,SAASgB,KACfwI,OAAOC,SAASC,KAAO,eAGzB3B,EAAQU,GAAe,IAEzB,IAAMkB,EAAOX,SAASY,eAAe,QAErCC,IAAS7K,OAAO,kBAAC,GAAD,CAAM+I,MAAOA,IAAW4B,Q","file":"static/js/main.f76868dd.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\nconst Auth = ({ component: Component, path, loggedIn, exact }) => (\n  <Route path={path} exact={exact} render={(props) => (\n    !loggedIn ? (\n      <Component {...props} />\n    ) : (\n      <Redirect to=\"/\" />\n    )\n  )} />\n);\n\n// const Public = ({ component: Component, path, loggedIn, exact }) => (\n//   <Route path={path} exact={exact} render={(props) => (\n//       <Component {...props} />\n//   )} />\n// );\n// export const PublicRoute = withRouter(connect(mapStateToProps)(Public));\n\nconst Protected = ({ component: Component, loggedIn, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      loggedIn ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => (\n  {loggedIn: state.session.isAuthenticated}\n);\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));\n","import axios from 'axios';\n\nexport const setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport const signup = (userData) => {\n  return axios.post('/api/users/register', userData);\n};\n\nexport const login = (userData) => {\n  return axios.post('/api/users/login', userData);\n};\n\n","import * as APIUtil from '../util/session_api_util';\nimport jwt_decode from 'jwt-decode';\n\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION_ERRORS\";\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\";\n\nexport const receiveCurrentUser = currentUser => ({\n    type: RECEIVE_CURRENT_USER,\n    currentUser\n});\n\nexport const receiveUserSignIn = () => ({\n    type: RECEIVE_USER_SIGN_IN\n});\n  \nexport const receiveErrors = errors => ({\n    type: RECEIVE_SESSION_ERRORS,\n    errors\n});\n\nexport const logoutUser = () => ({\n    type: RECEIVE_USER_LOGOUT\n});\n\nexport const signup = user => dispatch => (\n    APIUtil.signup(user).then(() => (\n        dispatch(receiveUserSignIn())\n    ), err => (\n        dispatch(receiveErrors(err.response.data))\n    ))\n);\n\nexport const login = user => dispatch => (\n    APIUtil.login(user).then(res => {\n        const { token } = res.data;\n        localStorage.setItem('jwtToken', token);\n        APIUtil.setAuthToken(token);\n        const decoded = jwt_decode(token);\n        dispatch(receiveCurrentUser(decoded))\n    })\n    .catch(err => {\n        dispatch(receiveErrors(err.response.data));\n    })\n)\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem('jwtToken')\n    APIUtil.setAuthToken(false)\n    dispatch(logoutUser())\n};\n\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport './navbar.css'\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.logoutUser = this.logoutUser.bind(this);\n    this.getLinks = this.getLinks.bind(this);\n  }\n\n  logoutUser(e) {\n      e.preventDefault();\n      this.props.logout();\n  }\n\n  getLinks() {\n      if (this.props.loggedIn) {\n        return (\n            <div>\n                <Link to={'/listings'}>Shop</Link>\n                <Link to={'/profile'}>Profile</Link>\n                <Link to={'/new_listing'}>Make a Listing</Link>\n                <button onClick={this.logoutUser}>Logout</button>\n            </div>\n        );\n      } else {\n        return (\n            <div>\n                <Link to={'/listings'}>Shop</Link>\n                <Link to={'/signup'}>Signup</Link>\n                <Link to={'/login'}>Login</Link>\n            </div>\n        );\n      }\n  }\n\n  render() {\n      return (\n        <div>\n            <h1>PressOnShop</h1>\n            { this.getLinks() }\n        </div>\n      );\n  }\n}\n\nexport default NavBar;","import { connect } from 'react-redux';\nimport { logout } from '../../actions/session_actions';\n\nimport NavBar from './navbar';\n\nconst mapStateToProps = state => ({\n  loggedIn: state.session.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(NavBar);","import { getListing, getListings, getUserListings, writeListing } from '../util/listing_api_util';\n\nexport const RECEIVE_LISTING = \"RECEIVE_LISTING\";\nexport const RECEIVE_LISTINGS = \"RECEIVE_LISTINGS\";\nexport const RECEIVE_USER_LISTINGS = \"RECEIVE_USER_LISTINGS\";\nexport const RECEIVE_NEW_LISTING = \"RECEIVE_NEW_LISTING\";\n\nexport const receiveListing = listing => ({\n  type: RECEIVE_LISTING,\n  listing\n});\n\nexport const receiveListings = listings => ({\n  type: RECEIVE_LISTINGS,\n  listings\n});\n\nexport const receiveUserListings = listings => ({\n  type: RECEIVE_USER_LISTINGS,\n  listings\n});\n\nexport const receiveNewListing = listing => ({\n  type: RECEIVE_NEW_LISTING,\n  listing\n})\n\nexport const fetchListing = id => dispatch => (\n  getListing(id)\n    .then(listing => dispatch(receiveListing(listing)))\n    .catch(err => console.log(err))\n);\n\nexport const fetchListings = () => dispatch => (\n  getListings()\n    .then(listings => dispatch(receiveListings(listings)))\n    .catch(err => console.log(err))\n);\n\nexport const fetchUserListings = id => dispatch => (\n  getUserListings(id)\n    .then(listings => dispatch(receiveUserListings(listings)))\n    .catch(err => console.log(err))\n);\n\nexport const composeListing = data => dispatch => (\n  writeListing(data)\n    .then(listing => dispatch(receiveNewListing(listing)))\n    .catch(err => console.log(err))\n);","import axios from 'axios';\n\nexport const getListing = id => {\n  return axios.get(`/api/listings/${id}`)\n};\n\nexport const getListings = () => {\n  return axios.get(`/api/listings`)\n};\n\nexport const getUserListings = id => {\n  return axios.get(`/api/listings/user/${id}`)\n};\n\nexport const writeListing = data => {\n  return axios.post('/api/listings/', data)\n}","import { Link } from 'react-router-dom';\nimport React from 'react';\n\nclass ListingBox extends React.Component {\n  render() {\n    return (\n        <div>\n          <h3>\n            <Link to={`/listings/${this.props.listing._id}`} key={this.props.listing._id} params={{ listing: this.props.listing }}>{this.props.listing.title}</Link>\n          </h3>\n            <p>${this.props.listing.price}</p>\n            {/* <p>{this.props.listing.text}</p> */}\n        </div>\n    );\n  }\n}\n\nexport default ListingBox;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ListingBox from './listing_box';\n\nclass Listing extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      listings: []\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchListings();\n  }\n\n  componentWillReceiveProps(newState) {\n    this.setState({ listings: newState.listings });\n    // console.log(this.state.listings)\n  }\n\n  render() {\n    if (this.state.listings.length === 0) {\n      return (<div>There are no posts</div>)\n    } else {\n      return (\n        <div>\n          <h2>Shop</h2>\n          \n          {this.state.listings.map(listing => (\n            // <Link to={`/listing/`} key={listing._id} params={{ listing: listing }}>{listing.title}</Link>\n            <ListingBox key={listing._id} listing={listing} />\n            ))}\n          \n        </div>\n      );\n    }\n  }\n}\n\nexport default withRouter(Listing);\n","import { connect } from 'react-redux';\nimport { fetchListings } from '../../actions/listing_actions';\nimport Listings from './listings';\n\nconst mapStateToProps = (state) => {\n  return {\n    listings: Object.values(state.listings.all)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchListings: () => dispatch(fetchListings())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Listings);\n","\nimport React from 'react';\n\nclass DetailList extends React.Component {\n  render() {\n    let details = this.props.details\n    if (details === undefined) {\n      return (<div>fetching details...</div>)\n    } else {\n      return (\n        <div>\n          <span>{this.props.name}: </span>\n          <p>\n            {details.map((el, i, arr)=> ((i !== arr.length - 1) ? el += ', ' : el))}\n          </p>\n        </div>\n    );\n    }\n  }\n\n}\n\nexport default DetailList;\n","\nimport React from 'react';\n\nclass DetailDropdown extends React.Component {\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n  render() {\n    let options = this.props.options\n    let optionComponentArray = []\n    if (options === undefined) {\n      return (<div>fetching options...</div>)\n    } else {\n      for (let i = 0; i < options.length; i++) {\n          let option = options[i]\n          optionComponentArray.push(<option key={i} value={option} >{option}</option>)\n      }\n      return ( \n        <>\n            <label >\n                <span >{this.props.name}: </span>\n                <select name={this.props.name}\n                  defaultValue='Select'\n                  // onChange={this.update(this.props.name)}\n                >\n                  {optionComponentArray}\n                </select>\n            </label>\n        </> \n      )\n    }\n  }\n}\n\nexport default DetailDropdown;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport DetailList from '../detailbox/detail_list';\nimport DetailDropdown from '../detailbox/detail_dropdown';\n\nclass Listing extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      listing: {},\n      catagories: {}\n    }\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id\n    this.props.fetchListing(id);\n  }\n\n\n\n  componentDidUpdate(prevProps){\n    if (this.props.listing._id !== prevProps.listing._id) {\n      // const id = this.props.match.params.id;\n      this.setState({ listing: this.props.listing });\n    }\n  }\n\n  makeArraysForComponents() {\n    const detailCatagories = ['colors', 'finishes', 'length', 'shapes', 'size', 'styles']\n    detailCatagories.forEach(detail => {\n      if (this.state.listing[detail]) {\n        // this.setState({ catagories[detail]: (Object.keys(this.state.listing[detail]).filter(el => this.state.listing[detail][el])});\n        this.state.catagories[detail] = (Object.keys(this.state.listing[detail]).filter(el => this.state.listing[detail][el]))\n      }\n    })\n  }\n\n  // componentWillReceiveProps(newState) {\n  //   this.setState({ listing: newState.listing })\n  //   this.makeArraysForComponents()\n  //   // console.log(this.state)\n  // }\n\n  render() {\n    if (Object.keys(this.state.listing) === 0) {\n      return (<div>Loading...(If product does not display reload page)</div>)\n    } else {\n      this.makeArraysForComponents()\n\n      // console.log(this.state)\n      return (\n        <div>\n            <h1>\n              {this.state.listing.title}\n            </h1>\n            <h2>${this.state.listing.price}</h2>\n            <p>{this.state.listing.text}</p>\n              <DetailList key='colors' name='colors' details={this.state.catagories.colors}/>\n              {/* <DetailList key='finishes' name='finishes' details={this.state.catagories.finishes}/> */}\n              <DetailList key='styles' name='styles' details={this.state.catagories.styles}/>\n            \n            <form onSubmit={this.handleSubmit}>\n              <DetailDropdown key='size' name='size' options={this.state.catagories.size}/>\n              <br/>\n              <DetailDropdown key='length' name='length' options={this.state.catagories.length}/>\n              <br/>\n              <DetailDropdown key='shapes' name='shapes' options={this.state.catagories.shapes}/>\n              <br/>\n              <DetailDropdown key='finishes' name='finishes' options={this.state.catagories.finishes}/>\n          \n            </form>\n            \n            <p>Listing Status: {this.state.listing.listingstatus}</p>\n\n        </div>\n      );\n    }\n  }\n}\n\nexport default withRouter(Listing);\n","import { connect } from 'react-redux';\nimport { fetchListing } from '../../actions/listing_actions';\nimport Listing from './listing';\n\nconst mapStateToProps = (state) => {\n  // console.log(state)\n  return {\n    session: state.session,\n    listing: state.listing\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchListing: id => dispatch(fetchListing(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Listing);\n","import React from 'react';\n\nclass MainPage extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <p>PressOnShop</p>\n        <footer>\n          Copyright &copy; 2020 PressOnShop\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/listings');\n    }\n\n    this.setState({errors: nextProps.errors})\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.login(user); \n  }\n\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <br/>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);","import { connect } from 'react-redux';\nimport { login } from '../../actions/session_actions';\nimport LoginForm from './login_form';\n\nconst mapStateToProps = (state) => {\n  return {\n    errors: state.errors.session\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: user => dispatch(login(user))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      handle: '',\n      password: '',\n      password2: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearedErrors = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.signedIn === true) {\n      this.props.history.push('/login');\n    }\n\n    this.setState({errors: nextProps.errors})\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let user = {\n      email: this.state.email,\n      handle: this.state.handle,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.signup(user, this.props.history); \n  }\n\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"login-form-container\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"login-form\">\n            <br/>\n              <input type=\"text\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Email\"\n              />\n            <br/>\n              <input type=\"text\"\n                value={this.state.handle}\n                onChange={this.update('handle')}\n                placeholder=\"Handle\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n              <input type=\"password\"\n                value={this.state.password2}\n                onChange={this.update('password2')}\n                placeholder=\"Confirm Password\"\n              />\n            <br/>\n            <input type=\"submit\" value=\"Submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignupForm);","import { connect } from 'react-redux';\nimport { signup } from '../../actions/session_actions';\nimport SignupForm from './signup_form';\n\nconst mapStateToProps = (state) => {\n  return {\n    signedIn: state.session.isSignedIn,\n    errors: state.errors.session\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signup: user => dispatch(signup(user))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignupForm);","import React from 'react';\nimport ListingBox from '../listings/listing_box';\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            listings: []\n        }\n    }\n    \n    componentDidMount() {\n        console.log(this.props.currentUser.id)\n        this.props.fetchUserListings(this.props.currentUser.id);\n    }\n\n    componentWillReceiveProps(newState) {\n        this.setState({ listings: newState.listings });\n    }   \n    \n    render() {\n        if (this.state.listings.length === 0) {\n          return (<div>This user has no listings</div>)\n        } else {\n          return (\n            <div>\n              <h2>All of This Artist's Listings</h2>\n              {this.state.listings.map(listing => (\n                <ListingBox key={listing._id} listing={listing} />\n              ))}\n            </div>\n          );\n        }\n      }\n}\n\nexport default Profile;\n","import { connect } from 'react-redux';\nimport { fetchUserListings } from '../../actions/listing_actions';\nimport Profile from './profile';\n\nconst mapStateToProps = (state) => {\n  return {\n    listings: Object.values(state.listings.user),\n    currentUser: state.session.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserListings: id => dispatch(fetchUserListings(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React from 'react';\nimport ListingBox from './listing_box';\n\nclass ListingCompose extends React.Component {\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          title: '',\n          text: \"\",\n          listingstatus: '',\n          price: 0,\n          size: {},\n          finishes: {},\n          length: {},\n          shapes: {},\n          colors: {},\n          styles: {},\n          newListing: \"\",\n      }\n\n      this.handleSubmit = this.handleSubmit.bind(this);\n  } \n\n  componentWillReceiveProps(nextProps) {\n      this.setState({newListing: nextProps.newListing});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let listing = {\n      listingstatus: this.state.listingstatus,\n      title: this.state.title,\n      //Text is the listing description\n      text: this.state.text,\n      price: this.state.price,\n      size: this.state.size,      \n      finishes: this.state.finishes,\n      length: this.state.length,\n      shapes: this.state.shapes,\n      colors: this.state.colors,\n      styles: this.state.styles,\n    };\n\n    this.props.composeListing(listing); \n    this.setState({\n      listingstatus: '',\n      title: '',\n      text: '',\n      size: {},\n      finishes: {},\n      length: {},\n      shapes: {},\n      colors: {},\n      styles: {},\n    })\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value \n    });\n  }\n\n  updateObj(field) {\n    return e => this.setState({ [field]: Object.assign( this.state[field] || {}, {\n      [e.target.name]: e.target.checked\n    } ) } );\n  }\n\n  // updatePrice(field){\n  //   this.update(field)\n  //   this.setTwoNumberDecimal()\n  // }\n\n  // setTwoNumberDecimal(event) {\n  //   this.value = parseFloat(this.value).toFixed(2);\n  // }\n\n  render() {\n    return (\n        <div>\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                  Listing Status:\n                  <input type=\"textarea\" \n                    value={this.state.listingstatus}\n                    onChange={this.update('listingstatus')}\n                    placeholder=\"Enter text here\"\n                  />\n                  <br/>\n                  Title\n                  <input type=\"textarea\"\n                    value={this.state.title}\n                    onChange={this.update('title')}\n                    placeholder=\"Title (Required Field)\"\n                  />\n                  <br/>\n\n                  Description      \n                  <input type=\"textarea\" \n                    value={this.state.text}\n                    onChange={this.update('text')}\n                    placeholder=\"Enter text here\"\n                  />\n                  <br/>\n\n                  Price $   \n                  <input type=\"number\" \n                    value={this.state.price}\n                    min=\"0\"\n                    onChange={this.update('price')}\n                    placeholder=\"Enter price here in USD\"\n                  />\n                  (Please Enter in USD)\n                  <br/>\n\n                  Size:\n                  Small\n                  <input type=\"checkbox\" name=\"small\" onChange={this.updateObj('size')}/>\n                  Medium\n                  <input type=\"checkbox\" name=\"medium\" onChange={this.updateObj('size')}/>                  \n                  Large\n                  <input type=\"checkbox\" name=\"large\" onChange={this.updateObj('size')}/>                  \n                  X Large\n                  <input type=\"checkbox\" name=\"xl\" onChange={this.updateObj('size')}/>                  \n                  XX Large\n                  <input type=\"checkbox\" name=\"xxl\" onChange={this.updateObj('size')}/>\n                  <br/>                  \n                  Full Set (Contact Artist)\n                  <input type=\"checkbox\" name=\"fullset\" onChange={this.updateObj('size')}/>                  \n                  Custom Size (Contact Artist)\n                  <input type=\"checkbox\" name=\"customsize\" onChange={this.updateObj('size')}/>\n\n                  <br/>\n                  Finishes:\n                  Matte\n                  <input type=\"checkbox\" name=\"matte\" onChange={this.updateObj('finishes')}/>\n                  Gloss\n                  <input type=\"checkbox\" name=\"gloss\" onChange={this.updateObj('finishes')}/>\n\n                  <br/>\n                  Length:\n                  Short\n                  <input type=\"checkbox\" name=\"short\" onChange={this.updateObj('length')}/>\n                  Medium\n                  <input type=\"checkbox\" name=\"medium\" onChange={this.updateObj('length')}/>\n                  Long\n                  <input type=\"checkbox\" name=\"long\" onChange={this.updateObj('length')}/>\n                  Extra Long\n                  <input type=\"checkbox\" name=\"extralong\" onChange={this.updateObj('length')}/>\n\n                  <br/>\n                  Shapes:\n                  Coffin\n                  <input type=\"checkbox\" name=\"coffin\" onChange={this.updateObj('shapes')}/>\n                  Stiletto\n                  <input type=\"checkbox\" name=\"stiletto\" onChange={this.updateObj('shapes')}/>\n                  Square\n                  <input type=\"checkbox\" name=\"square\" onChange={this.updateObj('shapes')}/>\n                  Almond\n                  <input type=\"checkbox\" name=\"almond\" onChange={this.updateObj('shapes')}/>\n                  Oval\n                  <input type=\"checkbox\" name=\"oval\" onChange={this.updateObj('shapes')}/>\n                  Round\n                  <input type=\"checkbox\" name=\"round\" onChange={this.updateObj('shapes')}/>\n                  Ballerina\n                  <input type=\"checkbox\" name=\"ballerina\" onChange={this.updateObj('shapes')}/>\n\n                  <br/>\n                  Colors:\n                  Pink\n                  <input type=\"checkbox\" name=\"pink\" onChange={this.updateObj('colors')}/>\n                  White\n                  <input type=\"checkbox\" name=\"white\" onChange={this.updateObj('colors')}/>\n                  Orange\n                  <input type=\"checkbox\" name=\"orange\" onChange={this.updateObj('colors')}/>\n                  Red\n                  <input type=\"checkbox\" name=\"red\" onChange={this.updateObj('colors')}/>\n                  Black\n                  <input type=\"checkbox\" name=\"black\" onChange={this.updateObj('colors')}/>\n                  Blue\n                  <input type=\"checkbox\" name=\"blue\" onChange={this.updateObj('colors')}/>\n                  Green\n                  <input type=\"checkbox\" name=\"green\" onChange={this.updateObj('colors')}/>\n                  Purple\n                  <input type=\"checkbox\" name=\"purple\" onChange={this.updateObj('colors')}/>                  \n                  Brown\n                  <input type=\"checkbox\" name=\"brown\" onChange={this.updateObj('colors')}/>                  \n                  Yellow\n                  <input type=\"checkbox\" name=\"yellow\" onChange={this.updateObj('colors')}/>                  \n                  Clear\n                  <input type=\"checkbox\" name=\"clear\" onChange={this.updateObj('colors')}/>                  \n                  Gold\n                  <input type=\"checkbox\" name=\"gold\" onChange={this.updateObj('colors')}/>                  \n                  Silver\n                  <input type=\"checkbox\" name=\"silver\" onChange={this.updateObj('colors')}/>                  \n                  Other\n                  <input type=\"checkbox\" name=\"other\" onChange={this.updateObj('colors')}/>\n\n                  <br/>\n                  Styles:\n                  Plain\n                  <input type=\"checkbox\" name=\"plain\" onChange={this.updateObj('styles')}/>\n                  Bling\n                  <input type=\"checkbox\" name=\"bling\" onChange={this.updateObj('styles')}/>\n                  Textured (i.e. Glitter, 3D)\n                  <input type=\"checkbox\" name=\"textured\" onChange={this.updateObj('styles')}/>\n                  Pattern\n                  <input type=\"checkbox\" name=\"pattern\" onChange={this.updateObj('styles')}/>\n                  Neon\n                  <input type=\"checkbox\" name=\"neon\" onChange={this.updateObj('styles')}/>\n                  Character (i.e. Cartoons, Anime)\n                  <input type=\"checkbox\" name=\"character\" onChange={this.updateObj('styles')}/>\n                  Themed (i.e. Butterfly, Floral)\n                  <input type=\"checkbox\" name=\"theme\" onChange={this.updateObj('styles')}/>\n                  Occassion (i.e. Birthday, Seasons)\n                  <input type=\"checkbox\" name=\"occassion\" onChange={this.updateObj('styles')}/>                  \n                  Other\n                  <input type=\"checkbox\" name=\"other\" onChange={this.updateObj('styles')}/>\n                  \n                  {/* I accept returns and exchanges\n                  <input type=\"checkbox\" value=\"I accept returns and exchanges\"/>\n                  <br/>\n                  I accept PayPal\n                  <input type=\"checkbox\" value=\"I accept PayPal\"/>\n                  <br/>\n                  I accept credit card(s)\n                  <input type=\"checkbox\" value=\"I accept credit card(s)\"/>\n                  <br/>\n                  I accept full and custom sets for an additional fee\n                  <input type=\"checkbox\" value=\"I accept full and custom sets for an additional fee\"/>\n     \n                  <br/> */}\n\n                  {/* Store Policy, Fees and Shipping Details:\n                  <input type=\"textarea\" \n                    value={this.state.storepolicy}\n                    onChange={this.update('storepolicy')}\n                    placeholder=\"Enter text here\"\n                  />\n                  <br/> */}\n                  <br/>\n                  <input type=\"submit\" value=\"Submit\" />\n                </div>\n            </form>\n            <br />\n            <ListingBox listing={this.state.newListing} />\n        </div>\n    )\n  }\n}\n\nexport default ListingCompose;\n","import { connect } from 'react-redux';\nimport { composeListing } from '../../actions/listing_actions';\nimport ListingCompose from './listing_compose';\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.session.user,\n    newListing: state.listings.new\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    composeListing: data => dispatch(composeListing(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListingCompose);\n","import React from 'react';\nimport { \n  AuthRoute, \n  // PublicRoute, \n  ProtectedRoute,\n} from '../util/route_util';\nimport { \n  Switch,\n  Route,\n} from 'react-router-dom';\nimport NavBarContainer from './nav/navbar_container';\n\nimport ListingsContainer from './listings/listings_container';\nimport ListingContainer from './listings/listing_container';\nimport MainPage from './main/main_page';\nimport LoginFormContainer from './session/login_form_container';\nimport SignupFormContainer from './session/signup_form_container';\nimport ProfileContainer from './profile/profile_container';\nimport ListingComposeContainer from './listings/listing_compose_container';\n\nconst App = () => (\n  <div>\n    <NavBarContainer />\n    <Switch>\n      <AuthRoute exact path=\"/\" component={MainPage} />\n      <AuthRoute exact path=\"/login\" component={LoginFormContainer} />\n      <AuthRoute exact path=\"/signup\" component={SignupFormContainer} />\n\n      <Route exact path=\"/listings/:id\" component={ListingContainer} />\n\n      <Route exact path=\"/listings\" component={ListingsContainer} />\n      <ProtectedRoute exact path=\"/profile\" component={ProfileContainer} />\n      <ProtectedRoute exact path=\"/new_listing\" component={ListingComposeContainer} />\n    </Switch>\n  </div>\n);\n\nexport default App;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './app';\n\nconst Root = ({ store }) => (\n  <Provider store={ store }>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nexport default Root;","import { RECEIVE_CURRENT_USER, \n         RECEIVE_USER_LOGOUT, \n         RECEIVE_USER_SIGN_IN } from '../actions/session_actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: undefined\n      };\n    case RECEIVE_USER_SIGN_IN:\n      return {\n        ...state,\n        isSignedIn: true\n      }\n    default:\n      return state;\n  }\n}","import {\n  RECEIVE_SESSION_ERRORS,\n  RECEIVE_CURRENT_USER,\n} from '../actions/session_actions';\n\nconst _nullErrors = [];\n\nconst SessionErrorsReducer = (state = _nullErrors, action) => {\n  Object.freeze(state);\n  switch(action.type) {\n    case RECEIVE_SESSION_ERRORS:\n      return action.errors;\n    case RECEIVE_CURRENT_USER:\n      return _nullErrors;\n    default:\n      return state;\n  }\n};\n\nexport default SessionErrorsReducer;","import { combineReducers } from 'redux';\n\nimport SessionErrorsReducer from './session_errors_reducer';\n\nexport default combineReducers({\n  session: SessionErrorsReducer\n});","import { RECEIVE_LISTINGS, RECEIVE_USER_LISTINGS, RECEIVE_NEW_LISTING } from '../actions/listing_actions';\n  \n  const ListingsReducer = (state = { all: {}, user: {}, new: undefined }, action) => {\n    Object.freeze(state);\n    let newState = Object.assign({}, state);\n    switch(action.type) {\n      case RECEIVE_LISTINGS:\n        newState.all = action.listings.data;\n        return newState;\n      case RECEIVE_USER_LISTINGS:\n        newState.user = action.listings.data;\n        return newState;\n      case RECEIVE_NEW_LISTING:\n        newState.new = action.listing.data\n        return newState;\n      default:\n        return state;\n    }\n  };\n  \n  export default ListingsReducer;","import { RECEIVE_LISTING, } from '../actions/listing_actions';\n  \n  const ListingReducer = (state = {}, action) => {\n    Object.freeze(state);\n    let newState = Object.assign({}, state);\n    switch(action.type) {\n      case RECEIVE_LISTING:\n        newState = action.listing.data;\n        // newState.listing = action.listing.data;\n        return newState;\n      default:\n        return state;\n    }\n  };\n  \n  export default ListingReducer;","import { combineReducers } from 'redux';\nimport session from './session_reducer';\nimport errors from './errors_reducer';\nimport listings from './listings_reducer';\nimport listing from './listing_reducer';\n\nconst RootReducer = combineReducers({\n  errors,\n  session,\n  listing,\n  listings,\n});\n\nexport default RootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport rootReducer from '../reducers/root_reducer';\n\nconst configureStore = (preloadedState = {}) => (\n  createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunk, logger)\n  )\n);\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/root';\nimport configureStore from './store/store';\nimport jwt_decode from 'jwt-decode';\n\nimport { setAuthToken } from './util/session_api_util';\nimport { logout } from './actions/session_actions';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store;\n\n  if (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n\n    const decodedUser = jwt_decode(localStorage.jwtToken);\n    const preloadedState = { session: { isAuthenticated: true, user: decodedUser } };\n    \n    store = configureStore(preloadedState);\n\n    const currentTime = Date.now() / 1000;\n\n    if (decodedUser.exp < currentTime) {\n      store.dispatch(logout());\n      window.location.href = '/login';\n    }\n  } else {\n    store = configureStore({});\n  }\n  const root = document.getElementById('root');\n\n  ReactDOM.render(<Root store={store} />, root);\n});"],"sourceRoot":""}